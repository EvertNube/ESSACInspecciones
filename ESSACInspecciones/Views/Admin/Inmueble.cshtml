@model ESSACInspecciones.Core.DTO.InmuebleDTO

@{
    if (Model == null || Model.IdInmueble == 0)
    {
        ViewBag.Title = "Inmueble";
    }
    else { ViewBag.Title = Model.NombreInmueble; }
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {

        });

        $("#add-plantilla").click(function () {
            var existe = false;
            var valuePlantilla = $('#plantillaInmueble :selected').val();
            if (valueResponsable > 0) {
                var textPlantilla = $('#plantillaInmueble :selected').text();
                $('#Plantillas option').each(function () {
                    if ($(this).val() == valuePlantilla) existe = true;
                });
                if (!existe) {
                    $('#Plantillas').append($('<option>', {
                        value: valuePlantilla,
                        text: textPlantilla
                    }));
                    $('#plantillaInmueble :selected').remove();
                } else {
                    alert("No se puede agregar el protocolo " + textPlantilla + ", porque ya se encuentra agregado.");
                }
            } else {
                alert("Por favor, seleccione un protocolo válido.");
            }
        });
        $("#remove-plantilla").click(function () {
            var val = $('#Plantillas :selected').val();
            var text = $('#Plantillas :selected').text();
            $('#plantillaInmueble').append($('<option>', {
                value: val,
                text: text
            }));
            $("select#plantillaInmueble").html($("select#responsableTarea option").sort(function (a, b) {
                return a.text == b.text ? 0 : a.value > b.value ? 1 : -1;
            }));
            $('#Responsables :selected').remove();
        });

        $("#btnGuardar").click(function () {
            //console.log("seteando");
            var values = [];
            $('#Responsables option').each(function () {
                values.push($(this).val());
            });
            $("#Responsables").val(values);//(["2", "3"]);
        });
    </script>
}

<section class="vbox">
    <section class="scrollable padder">
        <div class="row m-b">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                @if (Model == null || Model.IdInmueble == 0)
                {
                    <h2>Nuevo Inmueble</h2>
                }
                else
                {<h2>Actualizar Inmueble</h2>}

                @using (Html.BeginForm("AddInmueble", "Admin", FormMethod.Post))
                {
                    @Html.ValidationSummary(true)
                    <div class="row m-b">
                        <div class="col-xs-12 col-md-8">
                            @Html.Partial("_showAlertMessages")

                            <section class="panel panel-default">
                                <header class="panel-heading font-bold">Formulario de Registro</header>
                                <div class="panel-body">
                                    <div class="form-group">
                                        <label>Nombre</label>
                                        @Html.TextBoxFor(u => u.NombreInmueble, new { @class = "form-control", @placeholder = "Ingrese el nombre del inmueble", @type = "text" })
                                        @Html.ValidationMessageFor(u => u.NombreInmueble)
                                    </div>
                                    <div class="form-group">
                                        <label>Dirección</label>
                                        @Html.TextBoxFor(u => u.Direccion, new { @class = "form-control", @placeholder = "Ingrese la dirección del inmueble", @type = "text" })
                                        @Html.ValidationMessageFor(u => u.Direccion)
                                    </div>
                                    <div class=" form-horizontal">
                                        <div class="form-group">
                                            <label class="col-lg-3">Responsable</label>
                                            <div class="col-lg-8">
                                                @Html.DropDownList("plantillaInmueble", new SelectList(ViewBag.Plantillas, "IdPlantilla", "Nombre", 0), new { @class = "form-control parsley-validated" })
                                            </div>
                                            <div class="col-lg-1">
                                                <button type="button" class="btn btn-dark btn-sm btn-icon btn-rounded" id="add-responsable" data-toggle="tooltip" data-placement="right" title="" data-original-title="Agregar Responsable">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                            </div>
                                            @Html.ValidationMessageFor(u => u.IdPlantilla)
                                        </div>
                                    </div>
                                    <div class=" form-horizontal">
                                        <div class="form-group">
                                            <label class="col-lg-3"></label>
                                            <div class="col-lg-8">
                                                @Html.DropDownListFor(u => u.Plantillas, new MultiSelectList(Model != null ? ViewBag.Resources ?? new List<ESSACInspecciones.Core.DTO.PlantillaDTO>() : new List<ESSACInspecciones.Core.DTO.PlantillaDTO>(), "IdPlantilla", "Nombre"), new { @multiple = "multiple", @class = "form-control" })
                                            </div>
                                            <div class="col-lg-1">
                                                <button type="button" class="btn btn-dark btn-sm btn-icon btn-rounded" id="remove-responsable" data-toggle="tooltip" data-placement="right" title="" data-original-title="Quitar Responsable">
                                                    <i class="fa fa-minus-circle"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>

                                    @if (ViewBag.EsAdmin && Model != null && Model.IdInmueble > 0)
                                    {
                                        <div class="line line-dashed line-lg pull-in"></div>
                                        <div class="checkbox">
                                            <label>
                                                @Html.CheckBoxFor(u => u.Active)
                                                Activo
                                            </label>
                                            @Html.ValidationMessageFor(u => u.Active)
                                        </div>}
                                    else
                                    {
                                        @Html.TextBoxFor(u => u.Active, new { @value = Model != null ? Model.Active : false, @type = "hidden" })
                                    }
                                    <div class="line line-dashed line-lg pull-in"></div>
                                    @Html.TextBoxFor(u => u.IdInmueble, new { @value = Model != null ? Model.IdInmueble.ToString() : "", @type = "hidden" })
                                    @Html.TextBoxFor(u => u.IdCliente, new { @value = Model != null ? ViewBag.IdCliente : "", @type = "hidden" })
                                    @{var btnName = (Model != null && Model.IdInmueble > 0) ? "Guardar Cambios" : "Crear";}
                                    <button type="submit" class="btn btn-sm btn-primary btn-rounded">@btnName</button>
                                    <a class="btn btn-sm btn-danger btn-rounded" href="@Url.Action("Cliente", new { id = ViewBag.IdCliente })">Salir</a>
                                </div>
                            </section>
                        </div>
                    </div>
                }
            </div>
        </div>

    </section>
</section>